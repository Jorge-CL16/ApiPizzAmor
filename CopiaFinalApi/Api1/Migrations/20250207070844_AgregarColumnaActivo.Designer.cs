// <auto-generated />
using System;
using Api1.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api1.Migrations
{
    [DbContext(typeof(ApiPizzeriaContext))]
    [Migration("20250207070844_AgregarColumnaActivo")]
    partial class AgregarColumnaActivo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Api1.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCliente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<int>("Activo")
                        .HasColumnType("int");

                    b.Property<string>("Correo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("correo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("Telefono")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("telefono");

                    b.HasKey("IdCliente")
                        .HasName("PK__Clientes__885457EE9C70744D");

                    b.HasIndex(new[] { "Telefono" }, "UQ__Clientes__2A16D94583324A58")
                        .IsUnique()
                        .HasFilter("[telefono] IS NOT NULL");

                    b.HasIndex(new[] { "Correo" }, "UQ__Clientes__2A586E0BA40646BA")
                        .IsUnique()
                        .HasFilter("[correo] IS NOT NULL");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Api1.Models.DetallesOrden", b =>
                {
                    b.Property<int>("IdDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idDetalle");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalle"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<int>("IdMenu")
                        .HasColumnType("int")
                        .HasColumnName("idMenu");

                    b.Property<int>("IdOrden")
                        .HasColumnType("int")
                        .HasColumnName("idOrden");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precioUnitario");

                    b.HasKey("IdDetalle")
                        .HasName("PK__Detalles__49CAE2FBDBEEF972");

                    b.HasIndex("IdMenu");

                    b.HasIndex("IdOrden");

                    b.ToTable("DetallesOrden", (string)null);
                });

            modelBuilder.Entity("Api1.Models.Empleado", b =>
                {
                    b.Property<int>("IdEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idEmpleado");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmpleado"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("apellido");

                    b.Property<int>("Edad")
                        .HasColumnType("int")
                        .HasColumnName("edad");

                    b.Property<DateOnly>("FechaContratacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("fechaContratacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdPuesto")
                        .HasColumnType("int")
                        .HasColumnName("idPuesto");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("Sexo")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("sexo")
                        .IsFixedLength();

                    b.HasKey("IdEmpleado")
                        .HasName("PK__Empleado__5295297CC5116CA8");

                    b.HasIndex("IdPuesto");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("Api1.Models.Ingrediente", b =>
                {
                    b.Property<int>("IdIngrediente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idIngrediente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdIngrediente"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("IdIngrediente")
                        .HasName("PK__Ingredie__563C0D33C7CE21FF");

                    b.HasIndex(new[] { "Nombre" }, "UQ__Ingredie__72AFBCC6626F4511")
                        .IsUnique();

                    b.ToTable("Ingredientes");
                });

            modelBuilder.Entity("Api1.Models.IngredientesExtra", b =>
                {
                    b.Property<int>("IdExtra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idExtra");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdExtra"));

                    b.Property<int>("IdIngrediente")
                        .HasColumnType("int")
                        .HasColumnName("idIngrediente");

                    b.Property<int>("IdOrden")
                        .HasColumnType("int")
                        .HasColumnName("idOrden");

                    b.HasKey("IdExtra")
                        .HasName("PK__Ingredie__E06E1F50BC915D0F");

                    b.HasIndex("IdIngrediente");

                    b.HasIndex("IdOrden");

                    b.ToTable("IngredientesExtra", (string)null);
                });

            modelBuilder.Entity("Api1.Models.Menu", b =>
                {
                    b.Property<int>("IdMenu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idMenu");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMenu"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("descripcion");

                    b.Property<int>("IdTamano")
                        .HasColumnType("int")
                        .HasColumnName("idTamano");

                    b.Property<int>("IdTipoPizza")
                        .HasColumnType("int")
                        .HasColumnName("idTipoPizza");

                    b.Property<string>("ImagenUrl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("imagenURL");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precio");

                    b.HasKey("IdMenu")
                        .HasName("PK__Menu__C26AF4834321F7A8");

                    b.HasIndex("IdTamano");

                    b.HasIndex("IdTipoPizza");

                    b.ToTable("Menu", (string)null);
                });

            modelBuilder.Entity("Api1.Models.Ordene", b =>
                {
                    b.Property<int>("IdOrden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idOrden");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrden"));

                    b.Property<DateTime>("ActualizadoEn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("actualizadoEn")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("CreadoEn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creadoEn")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("FechaOrden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaOrden")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("idCliente");

                    b.Property<int>("IdEmpleado")
                        .HasColumnType("int")
                        .HasColumnName("idEmpleado");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("montoTotal");

                    b.HasKey("IdOrden")
                        .HasName("PK__Ordenes__C8AAF6F34FF97D86");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdEmpleado");

                    b.ToTable("Ordenes");
                });

            modelBuilder.Entity("Api1.Models.Puesto", b =>
                {
                    b.Property<int>("IdPuesto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPuesto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPuesto"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("IdPuesto")
                        .HasName("PK__Puestos__ADF48F194818A88F");

                    b.HasIndex(new[] { "Nombre" }, "UQ__Puestos__72AFBCC60AEB88CE")
                        .IsUnique();

                    b.ToTable("Puestos");
                });

            modelBuilder.Entity("Api1.Models.TamanoDePizza", b =>
                {
                    b.Property<int>("IdTamano")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idTamano");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTamano"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precio");

                    b.HasKey("IdTamano")
                        .HasName("PK__TamanoDe__8284F1DB7B53790A");

                    b.HasIndex(new[] { "Nombre" }, "UQ__TamanoDe__72AFBCC6CD9BFF43")
                        .IsUnique();

                    b.ToTable("TamanoDePizza", (string)null);
                });

            modelBuilder.Entity("Api1.Models.TiposDePizza", b =>
                {
                    b.Property<int>("IdTipoPizza")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idTipoPizza");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoPizza"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("IdTipoPizza")
                        .HasName("PK__TiposDeP__56E573418231663B");

                    b.HasIndex(new[] { "Nombre" }, "UQ__TiposDeP__72AFBCC61C23629E")
                        .IsUnique();

                    b.ToTable("TiposDePizza", (string)null);
                });

            modelBuilder.Entity("Api1.Models.Venta", b =>
                {
                    b.Property<int>("IdVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idVenta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVenta"));

                    b.Property<DateTime>("FechaVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaVenta")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdOrden")
                        .HasColumnType("int")
                        .HasColumnName("idOrden");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("montoTotal");

                    b.HasKey("IdVenta")
                        .HasName("PK__Ventas__077D5614AC939DBD");

                    b.HasIndex("IdOrden");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("MenuIngrediente", b =>
                {
                    b.Property<int>("IdMenu")
                        .HasColumnType("int")
                        .HasColumnName("idMenu");

                    b.Property<int>("IdIngrediente")
                        .HasColumnType("int")
                        .HasColumnName("idIngrediente");

                    b.HasKey("IdMenu", "IdIngrediente")
                        .HasName("PK__MenuIngr__E7093450BB2B18FB");

                    b.HasIndex("IdIngrediente");

                    b.ToTable("MenuIngredientes", (string)null);
                });

            modelBuilder.Entity("Api1.Models.DetallesOrden", b =>
                {
                    b.HasOne("Api1.Models.Menu", "IdMenuNavigation")
                        .WithMany("DetallesOrdens")
                        .HasForeignKey("IdMenu")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesOrden_Menu");

                    b.HasOne("Api1.Models.Ordene", "IdOrdenNavigation")
                        .WithMany("DetallesOrdens")
                        .HasForeignKey("IdOrden")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesOrden_Ordenes");

                    b.Navigation("IdMenuNavigation");

                    b.Navigation("IdOrdenNavigation");
                });

            modelBuilder.Entity("Api1.Models.Empleado", b =>
                {
                    b.HasOne("Api1.Models.Puesto", "IdPuestoNavigation")
                        .WithMany("Empleados")
                        .HasForeignKey("IdPuesto")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_Empleados_Puestos");

                    b.Navigation("IdPuestoNavigation");
                });

            modelBuilder.Entity("Api1.Models.IngredientesExtra", b =>
                {
                    b.HasOne("Api1.Models.Ingrediente", "IdIngredienteNavigation")
                        .WithMany("IngredientesExtras")
                        .HasForeignKey("IdIngrediente")
                        .IsRequired()
                        .HasConstraintName("FK_IngredientesExtra_Ingredientes");

                    b.HasOne("Api1.Models.Ordene", "IdOrdenNavigation")
                        .WithMany("IngredientesExtras")
                        .HasForeignKey("IdOrden")
                        .IsRequired()
                        .HasConstraintName("FK_IngredientesExtra_Ordenes");

                    b.Navigation("IdIngredienteNavigation");

                    b.Navigation("IdOrdenNavigation");
                });

            modelBuilder.Entity("Api1.Models.Menu", b =>
                {
                    b.HasOne("Api1.Models.TamanoDePizza", "IdTamanoNavigation")
                        .WithMany("Menus")
                        .HasForeignKey("IdTamano")
                        .IsRequired()
                        .HasConstraintName("FK_Menu_TamanoDePizza");

                    b.HasOne("Api1.Models.TiposDePizza", "IdTipoPizzaNavigation")
                        .WithMany("Menus")
                        .HasForeignKey("IdTipoPizza")
                        .IsRequired()
                        .HasConstraintName("FK_Menu_TiposDePizza");

                    b.Navigation("IdTamanoNavigation");

                    b.Navigation("IdTipoPizzaNavigation");
                });

            modelBuilder.Entity("Api1.Models.Ordene", b =>
                {
                    b.HasOne("Api1.Models.Cliente", "IdClienteNavigation")
                        .WithMany("Ordenes")
                        .HasForeignKey("IdCliente")
                        .IsRequired()
                        .HasConstraintName("FK_Ordenes_Clientes");

                    b.HasOne("Api1.Models.Empleado", "IdEmpleadoNavigation")
                        .WithMany("Ordenes")
                        .HasForeignKey("IdEmpleado")
                        .IsRequired()
                        .HasConstraintName("FK_Ordenes_Empleados");

                    b.Navigation("IdClienteNavigation");

                    b.Navigation("IdEmpleadoNavigation");
                });

            modelBuilder.Entity("Api1.Models.Venta", b =>
                {
                    b.HasOne("Api1.Models.Ordene", "IdOrdenNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdOrden")
                        .IsRequired()
                        .HasConstraintName("FK_Ventas_Ordenes");

                    b.Navigation("IdOrdenNavigation");
                });

            modelBuilder.Entity("MenuIngrediente", b =>
                {
                    b.HasOne("Api1.Models.Ingrediente", null)
                        .WithMany()
                        .HasForeignKey("IdIngrediente")
                        .IsRequired()
                        .HasConstraintName("FK_MenuIngredientes_Ingredientes");

                    b.HasOne("Api1.Models.Menu", null)
                        .WithMany()
                        .HasForeignKey("IdMenu")
                        .IsRequired()
                        .HasConstraintName("FK_MenuIngredientes_Menu");
                });

            modelBuilder.Entity("Api1.Models.Cliente", b =>
                {
                    b.Navigation("Ordenes");
                });

            modelBuilder.Entity("Api1.Models.Empleado", b =>
                {
                    b.Navigation("Ordenes");
                });

            modelBuilder.Entity("Api1.Models.Ingrediente", b =>
                {
                    b.Navigation("IngredientesExtras");
                });

            modelBuilder.Entity("Api1.Models.Menu", b =>
                {
                    b.Navigation("DetallesOrdens");
                });

            modelBuilder.Entity("Api1.Models.Ordene", b =>
                {
                    b.Navigation("DetallesOrdens");

                    b.Navigation("IngredientesExtras");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Api1.Models.Puesto", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("Api1.Models.TamanoDePizza", b =>
                {
                    b.Navigation("Menus");
                });

            modelBuilder.Entity("Api1.Models.TiposDePizza", b =>
                {
                    b.Navigation("Menus");
                });
#pragma warning restore 612, 618
        }
    }
}
